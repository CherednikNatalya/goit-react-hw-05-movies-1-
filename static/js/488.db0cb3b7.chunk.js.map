{"version":3,"file":"static/js/488.db0cb3b7.chunk.js","mappings":"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","sources":["components/TrendingList/TrendingList.styled.js","pages/Home/Home.styled.js","components/TrendingList/TrendingList.jsx","pages/Home/Home.jsx","services/API.js","services/status.js"],"sourcesContent":["import styled from 'styled-components';\n\n\n\nexport const List = styled.ul`\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tcolumn-gap: 20px;\n\trow-gap: 40px;\n`;\n\nexport const Item = styled.li`\n\twidth: 232px;\n`;\n\nexport const ImageBox = styled.div`\n\theight: 350px;\n\timg {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tborder-radius: 10px;\n\t}\n`;\n\nexport const TitleMovie = styled.h2`\n\tfont-weight: 600;\n\tmargin-top: 8px;\n\tline-height: 1.5;\n\tpadding-right: 10px;\n\twhite-space: nowrap;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n`;\n\n\n","import styled from 'styled-components';\n\n\nexport const Title = styled.h1`\n\tfont-weight: 600;\n\tfont-size: 26px;\n\tdisplay: block;\n\talign-items: center;\n\tflex-direction: row;\n\tmargin-bottom: 25px;\n`;","\nimport { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types'\nimport {List, TitleMovie, Item, ImageBox} from './TrendingList.styled'\nimport imageReplace from '../../images/poster-not-found.jpg'\n\nconst TrendingList =({movies}) => {\n    const location = useLocation();\n    return ( \n    \n          <List>\n\t\t\t{movies.map(({ id, img, title }) => (\n\t\t\t\t<Item key={id}>\n\t\t\t\t\t<Link to={`movies/${id}`} state={{ from: location }}>\t\n          <ImageBox>\n\t\t\t\t\t\t\t\t\t\t\t{img ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={`https://image.tmdb.org/t/p/w500` + img} alt={title} width={232} height={350} />\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={imageReplace} alt=\"Plug\" width={232} height={350} />\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</ImageBox>\n            <TitleMovie>{title}</TitleMovie>\n\t\t\t\t\t</Link>\n\t\t\t\t</Item>\n\t\t\t))}\n\t\t</List>\n\n\n    );\n  }\n\nexport default TrendingList\n\nTrendingList.propTypes = {\n    movies: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired,\n      })\n    ),\n  }\n\n","import { useState, useEffect } from 'react'\n\nimport {fetchTrendingMovies} from '../../services/API'\n\nimport STATUS from '../../services/status'\nimport {Title} from '../Home/Home.styled'\nimport Loader from '../../components/Loader/Loader'\nimport TrendingList  from '../../components/TrendingList/TrendingList'\n\n\n\nconst Home =() => {\nconst [movies, setMovies] = useState([])\nconst [status, setStatus] = useState(STATUS.idle);\n\nuseEffect (()=>{\n    const getMovies = async () => {\n        setStatus(STATUS.pending)\n        try {\n           const data =await fetchTrendingMovies()\n           onResolve(data) \n        } catch (error) {\n            console.log(error);\n            setStatus(STATUS.error); \n        }\n    }\n    getMovies()\n}, [])\n\nconst onResolve = data => {\n    const movie = data.map(({ id, poster_path, original_title }) => ({\n        id,\n        img: poster_path,\n        title: original_title,\n    }));\n    setMovies(movie);\n    setStatus(STATUS.success);\n}\n\n\n    return(\n<>\n<Title>Trending today</Title>\n{status === STATUS.pending && <Loader />}\n{status === STATUS.success && <TrendingList movies={movies}/>}\n\n</>\n)\n}\n\nexport default Home","import axios from 'axios';\n\nconst API_KEY = 'b52f4a97df843a5ead1cf8ccfba387fd';\nconst moviesApi = axios.create({\n\tbaseURL: 'https://api.themoviedb.org/3/',\n});\n\nexport const fetchTrendingMovies = async () => {\n\tconst {\n\t\tdata: { results },\n\t} = await moviesApi.get(`trending/movie/day`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t},\n\t});\n\treturn results;\n};\n\n\nexport const fetchSearchMovies = async searchName => {\n\tconst {\n\t\tdata: { results },\n\t} = await moviesApi.get(`search/movie`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t\tquery: searchName,\n\t\t},\n\t});\n\treturn results;\n};\n\nexport const fetchMovieDetailsById = async movieId => {\n\tconst { data } = await moviesApi.get(`movie/${movieId}`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t},\n\t});\n\treturn data;\n};\n\nexport const fetchCastById = async movieId => {\n\tconst {\n\t\tdata: { cast },\n\t} = await moviesApi.get(`movie/${movieId}/credits`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t},\n\t});\n\treturn cast;\n};\n\nexport const fetchReviewsById = async movieId => {\n\tconst {\n\t\tdata: { results },\n\t} = await moviesApi.get(`movie/${movieId}/reviews`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t},\n\t});\n\treturn results;\n};","const STATUS = {\n    idle: 'idle',\n    pending: 'pending',\n    success: 'success',\n    error: 'error',\n  };\n\n  export default STATUS"],"names":["List","styled","Item","ImageBox","TitleMovie","Title","movies","location","useLocation","map","id","img","title","to","state","from","src","alt","width","height","imageReplace","useState","setMovies","STATUS","status","setStatus","useEffect","getMovies","fetchTrendingMovies","data","onResolve","console","log","movie","poster_path","original_title","Loader","API_KEY","moviesApi","axios","baseURL","get","params","api_key","results","fetchSearchMovies","searchName","query","fetchMovieDetailsById","movieId","fetchCastById","cast","fetchReviewsById","idle","pending","success","error"],"sourceRoot":""}