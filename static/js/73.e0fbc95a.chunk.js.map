{"version":3,"file":"static/js/73.e0fbc95a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","components/MovieCart/MovieCart.styled.js","components/MovieCart/MovieCart.jsx","pages/MovieDetails/MovieDetails.jsx","services/API.js","services/status.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Section_title__SLHvV\"};","import css from './Section.module.css';\nimport PropTypes from 'prop-types';\n\n const Section = ({ title, children }) => (\n  <section>\n    <h2 className={css.title}>{title}</h2>\n    {children}\n  </section>\n);\n\n\nexport default Section \n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.element,\n};","import styled from 'styled-components';\n\nexport const Btn = styled.button`\n\tpadding: 5px 10px;\n\tborder-radius: 7px;\n\tfont-size: 12px;\n\tbackground-color: var(--secondary);\n\tcolor: #fff;\n\tborder: 1px solid var(--lightGray);\n\ttransition: all var(--anim);\n\tmargin-bottom: 20px;\n\t&:hover {\n\t\tbackground-color: var(--lightGray);\n\t\tcolor: var(--primary);\n\t\tborder-color: var(--secondary);\n\t}\n`;\n\nexport const Inner = styled.div`\n\tdisplay: flex;\n\tcolumn-gap: 60px;\n\tmax-width: 800px;\n\tmargin-bottom: 40px;\n`;\n\nexport const ImgBox = styled.div`\n\tflex: 30%;\n\timg {\n\t\twidth: 100%;\n\t\tborder-radius: 5px;\n\t}\n`;\n\nexport const Content = styled.div`\n\tflex: 60%;\n`;\n\nexport const Title = styled.h2`\n\tfont-weight: 600;\n\tline-height: 1.2;\n\tfont-size: 30px;\n\tmargin-bottom: 30px;\n`;\n\nexport const List = styled.ul`\n\tmargin-bottom: 40px;\n`;\n\nexport const Item = styled.li`\n\tdisplay: flex;\n\talign-items: center;\n\tcolumn-gap: 50px;\n\tfont-size: 15px;\n\t&:not(:last-child) {\n\t\t\tmargin-bottom: 10px;\n\t}\n`;\n\nexport const Name = styled.p`\n\tmin-width: 100px;\n\tcolor: var(--gray);\n`;\n\nexport const Value = styled.p`\n\tspan {\n\t\tdisplay: inline-block;\n\t\ttext-align: center;\n\t\tborder-radius: 8px;\n\t\tline-height: 1.2;\n\t\twidth: 50px;\n\t\tborder: 2px solid var(--secondary);\n\t}\n`;\n\nexport const Overview = styled.b`\n\tdisplay: block;\n\tfont-size: 18px;\n\tmargin-bottom: 15px;\n`;\n\nexport const Text = styled.p`\n\tfont-size: 15px;\n\tline-height: 1.3;\n`;\n\nexport const BtnList = styled.ul`\n\tdisplay: flex;\n\talign-items: center;\n\tcolumn-gap: 30px;\n\tmargin-bottom: 60px;\n`;","import {  Content, ImgBox, Inner, Item, List, Name, Value, Overview, Text, Title} from './MovieCart.styled'\nimport imageReplace from '../../images/poster-not-found.jpg'\n\nconst MovieCart =({movie}) =>{\n    return(\n<Inner>\n\t\t\t\t\t\t<ImgBox>\n\t\t\t\t\t\t\t{movie.img ? (\n\t\t\t\t\t\t\t\t<img src={`https://image.tmdb.org/t/p/w500`+ movie.img} alt={movie.title} width={250} height={375} />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<img src={imageReplace} alt=\"Plug\" width={250} height={375} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ImgBox>\n\t\t\t\t\t\t<Content>\n\t\t\t\t\t\t\t{movie.releaseDate ? (\n\t\t\t\t\t\t\t\t<Title>\n\t\t\t\t\t\t\t\t\t{movie.title} ({movie.releaseDate})\n\t\t\t\t\t\t\t\t</Title>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Title>{movie.title}</Title>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t\t<Item>\n\t\t\t\t\t\t\t\t\t<Name>User score</Name>\n\t\t\t\t\t\t\t\t\t<Value>\n\t\t\t\t\t\t\t\t\t\t<span> {movie.voteAverage} %</span>\n\t\t\t\t\t\t\t\t\t</Value>\n\t\t\t\t\t\t\t\t</Item>\n\t\t\t\t\t\t\t\t<Item>\n\t\t\t\t\t\t\t\t\t<Name>Genres</Name>\n\t\t\t\t\t\t\t\t\t{movie.genres ? <Value>{movie.genres}</Value> : <Value>Not information</Value>}\n\t\t\t\t\t\t\t\t</Item>\n\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t<Overview>Overview</Overview>\n\t\t\t\t\t\t\t{movie.overview ? <Text>{movie.overview}</Text> : <Text>Not information</Text>}\n\t\t\t\t\t\t</Content>\n\t\t\t\t\t</Inner>\n      \n    )\n}\n\nexport default MovieCart","import STATUS from '../../services/status'\nimport { useState, useEffect, Suspense} from 'react'\nimport {fetchMovieDetailsById} from '../../services/API'\nimport Section from '../../components/Section/Section'\nimport Loader from '../../components/Loader/Loader'\nimport MovieCart from '../../components/MovieCart/MovieCart'\n\nimport { useParams,  NavLink,Outlet,  Link, useLocation  } from 'react-router-dom'\n\nconst MovieDetails =() => {\n    const [movie, setMovie] = useState([])\n    const [status, setStatus] = useState(STATUS.idle);\n    const {movieId} =useParams()\n   \n    const location = useLocation()\n\n    useEffect (()=>{\n        const getMovie = async query => {\n            setStatus(STATUS.pending)\n            try {\n               const data =await fetchMovieDetailsById(movieId)\n               onResolve(data) \n            } catch (error) {\n               setStatus(STATUS.error); \n            } \n        }\n        getMovie()    \n    }, [movieId])\n\n\n    \n    const onResolve = data => {\n        const dataMovie = {\n            img: data.poster_path,\n            title: data.original_title,\n            releaseDate: new Date(data.release_date).getFullYear(),\n            overview: data.overview, \n            genres: data.genres.map(item => item.name + ', ').join(' ').slice(0, -2),\n            voteAverage: (data.vote_average * 10).toFixed(0),\n        };\n        setMovie(dataMovie);\n        setStatus(STATUS.success);\n    }\n\n    \n    return(\n        <Section>\n        {status === STATUS.pending && <Loader />}\n        {status === STATUS.success && \n        (<main>\n        <Link to={location.state?.from ?? '/'} className=\"mb-4\">\n          Go Back\n        </Link>\n     \n        <MovieCart movie={movie}/>\n        \n         <ul>\n         <li>\n           <NavLink to=\"cast\" state={{ from: location.state?.from }}>Cast</NavLink>\n         </li>\n         <li>\n           <NavLink to=\"reviews\" state={{ from: location.state?.from }}>Reviews</NavLink>\n         </li>\n       </ul>\n       \n\n       <Suspense fallback={<Loader/>}>\n        <Outlet />\n      </Suspense>\n      \n       </main>)}     \n        </Section>\n    )\n}\n\nexport default MovieDetails","import axios from 'axios';\n\nconst API_KEY = 'b52f4a97df843a5ead1cf8ccfba387fd';\nconst moviesApi = axios.create({\n\tbaseURL: 'https://api.themoviedb.org/3/',\n});\n\nexport const fetchTrendingMovies = async () => {\n\tconst {\n\t\tdata: { results },\n\t} = await moviesApi.get(`trending/movie/day`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t},\n\t});\n\treturn results;\n};\n\n\nexport const fetchSearchMovies = async searchName => {\n\tconst {\n\t\tdata: { results },\n\t} = await moviesApi.get(`search/movie`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t\tquery: searchName,\n\t\t},\n\t});\n\treturn results;\n};\n\nexport const fetchMovieDetailsById = async movieId => {\n\tconst { data } = await moviesApi.get(`movie/${movieId}`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t},\n\t});\n\treturn data;\n};\n\nexport const fetchCastById = async movieId => {\n\tconst {\n\t\tdata: { cast },\n\t} = await moviesApi.get(`movie/${movieId}/credits`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t},\n\t});\n\treturn cast;\n};\n\nexport const fetchReviewsById = async movieId => {\n\tconst {\n\t\tdata: { results },\n\t} = await moviesApi.get(`movie/${movieId}/reviews`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t},\n\t});\n\treturn results;\n};","const STATUS = {\n    idle: 'idle',\n    pending: 'pending',\n    success: 'success',\n    error: 'error',\n  };\n\n  export default STATUS"],"names":["title","children","className","css","Inner","styled","ImgBox","Content","Title","List","Item","Name","Value","Overview","Text","movie","img","src","alt","width","height","imageReplace","releaseDate","voteAverage","genres","overview","useState","setMovie","STATUS","status","setStatus","movieId","useParams","location","useLocation","useEffect","getMovie","query","fetchMovieDetailsById","data","onResolve","dataMovie","poster_path","original_title","Date","release_date","getFullYear","map","item","name","join","slice","vote_average","toFixed","Loader","to","state","from","Suspense","fallback","API_KEY","moviesApi","axios","baseURL","fetchTrendingMovies","get","params","api_key","results","fetchSearchMovies","searchName","fetchCastById","cast","fetchReviewsById","idle","pending","success","error"],"sourceRoot":""}